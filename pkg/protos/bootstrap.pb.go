// Copyright (c) Microsoft Corporation.
// Licensed under the MIT license.

// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.31.0
// 	protoc        v4.24.3
// source: pkg/protos/bootstrap.proto

package protos

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// A nonce is generated for a given request.
type NonceRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ResourceId string `protobuf:"bytes,1,opt,name=ResourceId,proto3" json:"ResourceId,omitempty"`
}

func (x *NonceRequest) Reset() {
	*x = NonceRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pkg_protos_bootstrap_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *NonceRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*NonceRequest) ProtoMessage() {}

func (x *NonceRequest) ProtoReflect() protoreflect.Message {
	mi := &file_pkg_protos_bootstrap_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use NonceRequest.ProtoReflect.Descriptor instead.
func (*NonceRequest) Descriptor() ([]byte, []int) {
	return file_pkg_protos_bootstrap_proto_rawDescGZIP(), []int{0}
}

func (x *NonceRequest) GetResourceId() string {
	if x != nil {
		return x.ResourceId
	}
	return ""
}

// This Response contains the nonce for the client to use in attested data.
type NonceResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Nonce string `protobuf:"bytes,1,opt,name=Nonce,proto3" json:"Nonce,omitempty"`
}

func (x *NonceResponse) Reset() {
	*x = NonceResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pkg_protos_bootstrap_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *NonceResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*NonceResponse) ProtoMessage() {}

func (x *NonceResponse) ProtoReflect() protoreflect.Message {
	mi := &file_pkg_protos_bootstrap_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use NonceResponse.ProtoReflect.Descriptor instead.
func (*NonceResponse) Descriptor() ([]byte, []int) {
	return file_pkg_protos_bootstrap_proto_rawDescGZIP(), []int{1}
}

func (x *NonceResponse) GetNonce() string {
	if x != nil {
		return x.Nonce
	}
	return ""
}

// A credential request has to match a valid generated nonce and auth data.
type CredentialRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ResourceId   string `protobuf:"bytes,1,opt,name=ResourceId,proto3" json:"ResourceId,omitempty"`
	Nonce        string `protobuf:"bytes,2,opt,name=Nonce,proto3" json:"Nonce,omitempty"`
	AttestedData string `protobuf:"bytes,3,opt,name=AttestedData,proto3" json:"AttestedData,omitempty"`
}

func (x *CredentialRequest) Reset() {
	*x = CredentialRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pkg_protos_bootstrap_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CredentialRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CredentialRequest) ProtoMessage() {}

func (x *CredentialRequest) ProtoReflect() protoreflect.Message {
	mi := &file_pkg_protos_bootstrap_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CredentialRequest.ProtoReflect.Descriptor instead.
func (*CredentialRequest) Descriptor() ([]byte, []int) {
	return file_pkg_protos_bootstrap_proto_rawDescGZIP(), []int{2}
}

func (x *CredentialRequest) GetResourceId() string {
	if x != nil {
		return x.ResourceId
	}
	return ""
}

func (x *CredentialRequest) GetNonce() string {
	if x != nil {
		return x.Nonce
	}
	return ""
}

func (x *CredentialRequest) GetAttestedData() string {
	if x != nil {
		return x.AttestedData
	}
	return ""
}

// The response credentials are used by kubelet to bootstrap itself.
type CredentialResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	CertificateData string `protobuf:"bytes,1,opt,name=CertificateData,proto3" json:"CertificateData,omitempty"`
	KeyData         string `protobuf:"bytes,2,opt,name=KeyData,proto3" json:"KeyData,omitempty"`
}

func (x *CredentialResponse) Reset() {
	*x = CredentialResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pkg_protos_bootstrap_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CredentialResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CredentialResponse) ProtoMessage() {}

func (x *CredentialResponse) ProtoReflect() protoreflect.Message {
	mi := &file_pkg_protos_bootstrap_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CredentialResponse.ProtoReflect.Descriptor instead.
func (*CredentialResponse) Descriptor() ([]byte, []int) {
	return file_pkg_protos_bootstrap_proto_rawDescGZIP(), []int{3}
}

func (x *CredentialResponse) GetCertificateData() string {
	if x != nil {
		return x.CertificateData
	}
	return ""
}

func (x *CredentialResponse) GetKeyData() string {
	if x != nil {
		return x.KeyData
	}
	return ""
}

var File_pkg_protos_bootstrap_proto protoreflect.FileDescriptor

var file_pkg_protos_bootstrap_proto_rawDesc = []byte{
	0x0a, 0x1a, 0x70, 0x6b, 0x67, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x73, 0x2f, 0x62, 0x6f, 0x6f,
	0x74, 0x73, 0x74, 0x72, 0x61, 0x70, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x16, 0x61, 0x7a,
	0x75, 0x72, 0x65, 0x2e, 0x61, 0x6b, 0x73, 0x2e, 0x74, 0x6c, 0x73, 0x62, 0x6f, 0x6f, 0x74, 0x73,
	0x74, 0x72, 0x61, 0x70, 0x22, 0x2e, 0x0a, 0x0c, 0x4e, 0x6f, 0x6e, 0x63, 0x65, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x12, 0x1e, 0x0a, 0x0a, 0x52, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65,
	0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x52, 0x65, 0x73, 0x6f, 0x75, 0x72,
	0x63, 0x65, 0x49, 0x64, 0x22, 0x25, 0x0a, 0x0d, 0x4e, 0x6f, 0x6e, 0x63, 0x65, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x4e, 0x6f, 0x6e, 0x63, 0x65, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x4e, 0x6f, 0x6e, 0x63, 0x65, 0x22, 0x6d, 0x0a, 0x11, 0x43,
	0x72, 0x65, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x61, 0x6c, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x12, 0x1e, 0x0a, 0x0a, 0x52, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x49, 0x64, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x52, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x49, 0x64,
	0x12, 0x14, 0x0a, 0x05, 0x4e, 0x6f, 0x6e, 0x63, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x05, 0x4e, 0x6f, 0x6e, 0x63, 0x65, 0x12, 0x22, 0x0a, 0x0c, 0x41, 0x74, 0x74, 0x65, 0x73, 0x74,
	0x65, 0x64, 0x44, 0x61, 0x74, 0x61, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x41, 0x74,
	0x74, 0x65, 0x73, 0x74, 0x65, 0x64, 0x44, 0x61, 0x74, 0x61, 0x22, 0x58, 0x0a, 0x12, 0x43, 0x72,
	0x65, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x61, 0x6c, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x12, 0x28, 0x0a, 0x0f, 0x43, 0x65, 0x72, 0x74, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x65, 0x44,
	0x61, 0x74, 0x61, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0f, 0x43, 0x65, 0x72, 0x74, 0x69,
	0x66, 0x69, 0x63, 0x61, 0x74, 0x65, 0x44, 0x61, 0x74, 0x61, 0x12, 0x18, 0x0a, 0x07, 0x4b, 0x65,
	0x79, 0x44, 0x61, 0x74, 0x61, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x4b, 0x65, 0x79,
	0x44, 0x61, 0x74, 0x61, 0x32, 0xdf, 0x01, 0x0a, 0x18, 0x41, 0x4b, 0x53, 0x42, 0x6f, 0x6f, 0x74,
	0x73, 0x74, 0x72, 0x61, 0x70, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x12, 0x59, 0x0a, 0x08, 0x47, 0x65, 0x74, 0x4e, 0x6f, 0x6e, 0x63, 0x65, 0x12, 0x24, 0x2e,
	0x61, 0x7a, 0x75, 0x72, 0x65, 0x2e, 0x61, 0x6b, 0x73, 0x2e, 0x74, 0x6c, 0x73, 0x62, 0x6f, 0x6f,
	0x74, 0x73, 0x74, 0x72, 0x61, 0x70, 0x2e, 0x4e, 0x6f, 0x6e, 0x63, 0x65, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x1a, 0x25, 0x2e, 0x61, 0x7a, 0x75, 0x72, 0x65, 0x2e, 0x61, 0x6b, 0x73, 0x2e,
	0x74, 0x6c, 0x73, 0x62, 0x6f, 0x6f, 0x74, 0x73, 0x74, 0x72, 0x61, 0x70, 0x2e, 0x4e, 0x6f, 0x6e,
	0x63, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x68, 0x0a, 0x0d,
	0x47, 0x65, 0x74, 0x43, 0x72, 0x65, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x61, 0x6c, 0x12, 0x29, 0x2e,
	0x61, 0x7a, 0x75, 0x72, 0x65, 0x2e, 0x61, 0x6b, 0x73, 0x2e, 0x74, 0x6c, 0x73, 0x62, 0x6f, 0x6f,
	0x74, 0x73, 0x74, 0x72, 0x61, 0x70, 0x2e, 0x43, 0x72, 0x65, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x61,
	0x6c, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x2a, 0x2e, 0x61, 0x7a, 0x75, 0x72, 0x65,
	0x2e, 0x61, 0x6b, 0x73, 0x2e, 0x74, 0x6c, 0x73, 0x62, 0x6f, 0x6f, 0x74, 0x73, 0x74, 0x72, 0x61,
	0x70, 0x2e, 0x43, 0x72, 0x65, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x61, 0x6c, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x42, 0x32, 0x5a, 0x30, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62,
	0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x41, 0x7a, 0x75, 0x72, 0x65, 0x2f, 0x61, 0x6b, 0x73, 0x2d, 0x74,
	0x6c, 0x73, 0x2d, 0x62, 0x6f, 0x6f, 0x74, 0x73, 0x74, 0x72, 0x61, 0x70, 0x2d, 0x63, 0x6c, 0x69,
	0x65, 0x6e, 0x74, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x73, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x33,
}

var (
	file_pkg_protos_bootstrap_proto_rawDescOnce sync.Once
	file_pkg_protos_bootstrap_proto_rawDescData = file_pkg_protos_bootstrap_proto_rawDesc
)

func file_pkg_protos_bootstrap_proto_rawDescGZIP() []byte {
	file_pkg_protos_bootstrap_proto_rawDescOnce.Do(func() {
		file_pkg_protos_bootstrap_proto_rawDescData = protoimpl.X.CompressGZIP(file_pkg_protos_bootstrap_proto_rawDescData)
	})
	return file_pkg_protos_bootstrap_proto_rawDescData
}

var file_pkg_protos_bootstrap_proto_msgTypes = make([]protoimpl.MessageInfo, 4)
var file_pkg_protos_bootstrap_proto_goTypes = []interface{}{
	(*NonceRequest)(nil),       // 0: azure.aks.tlsbootstrap.NonceRequest
	(*NonceResponse)(nil),      // 1: azure.aks.tlsbootstrap.NonceResponse
	(*CredentialRequest)(nil),  // 2: azure.aks.tlsbootstrap.CredentialRequest
	(*CredentialResponse)(nil), // 3: azure.aks.tlsbootstrap.CredentialResponse
}
var file_pkg_protos_bootstrap_proto_depIdxs = []int32{
	0, // 0: azure.aks.tlsbootstrap.AKSBootstrapTokenRequest.GetNonce:input_type -> azure.aks.tlsbootstrap.NonceRequest
	2, // 1: azure.aks.tlsbootstrap.AKSBootstrapTokenRequest.GetCredential:input_type -> azure.aks.tlsbootstrap.CredentialRequest
	1, // 2: azure.aks.tlsbootstrap.AKSBootstrapTokenRequest.GetNonce:output_type -> azure.aks.tlsbootstrap.NonceResponse
	3, // 3: azure.aks.tlsbootstrap.AKSBootstrapTokenRequest.GetCredential:output_type -> azure.aks.tlsbootstrap.CredentialResponse
	2, // [2:4] is the sub-list for method output_type
	0, // [0:2] is the sub-list for method input_type
	0, // [0:0] is the sub-list for extension type_name
	0, // [0:0] is the sub-list for extension extendee
	0, // [0:0] is the sub-list for field type_name
}

func init() { file_pkg_protos_bootstrap_proto_init() }
func file_pkg_protos_bootstrap_proto_init() {
	if File_pkg_protos_bootstrap_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_pkg_protos_bootstrap_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*NonceRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pkg_protos_bootstrap_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*NonceResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pkg_protos_bootstrap_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CredentialRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pkg_protos_bootstrap_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CredentialResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_pkg_protos_bootstrap_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   4,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_pkg_protos_bootstrap_proto_goTypes,
		DependencyIndexes: file_pkg_protos_bootstrap_proto_depIdxs,
		MessageInfos:      file_pkg_protos_bootstrap_proto_msgTypes,
	}.Build()
	File_pkg_protos_bootstrap_proto = out.File
	file_pkg_protos_bootstrap_proto_rawDesc = nil
	file_pkg_protos_bootstrap_proto_goTypes = nil
	file_pkg_protos_bootstrap_proto_depIdxs = nil
}
