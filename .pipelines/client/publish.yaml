name: $(SourceBranchName)_$(Date:yyyyMMdd).$(Rev:r)

parameters:
  - name: Version
    type: string
  - name: Revision
    type: string
    default: "1"

stages:
- stage: build
  jobs:
  - job: build_linux_amd64
    dependsOn: []
    pool:
      name: $(AMD64_POOL_NAME)
    displayName: Build linux-amd64
    steps:
    - checkout: self

    - bash: /bin/bash .pipelines/client/scripts/setup-msft-golang.sh
      displayName: Setup msft-golang

    - bash: /bin/bash .pipelines/client/scripts/build.sh
      env:
        STAGING_DIRECTORY: "$(Build.ArtifactStagingDirectory)"
        VERSION: "v${{ parameters.Version }}"
        REVISION: ${{ parameters.Revision }}
        OS: linux
        ARCH: amd64
      displayName: Build linux-amd64 client binary

    - publish: $(Build.ArtifactStagingDirectory)/aks-secure-tls-bootstrap-client
      artifact: linux-amd64

  - job: build_linux_arm64
    dependsOn: []
    pool:
      name: $(ARM64_POOL_NAME)
    displayName: Build linux-arm64
    steps:
    - checkout: self

    - bash: /bin/bash .pipelines/client/scripts/setup-msft-golang.sh
      displayName: Setup msft-golang

    - bash: /bin/bash .pipelines/client/scripts/build.sh
      env:
        STAGING_DIRECTORY: "$(Build.ArtifactStagingDirectory)"
        VERSION: "v${{ parameters.Version }}"
        REVISION: ${{ parameters.Revision }}
        OS: linux
        ARCH: arm64
      displayName: Build linux-arm64 client binary

    - publish: $(Build.ArtifactStagingDirectory)/aks-secure-tls-bootstrap-client
      artifact: linux-arm64

  - job: build_windows_amd64
    dependsOn: []
    pool:
      name: $(AMD64_POOL_NAME)
    displayName: Build windows-amd64
    steps:
    - checkout: self

    - bash: /bin/bash .pipelines/client/scripts/setup-msft-golang.sh
      displayName: Setup msft-golang

    - bash: /bin/bash .pipelines/client/scripts/build.sh
      env:
        STAGING_DIRECTORY: "$(Build.ArtifactStagingDirectory)"
        VERSION: "v${{ parameters.Version }}"
        REVISION: ${{ parameters.Revision }}
        OS: windows
        ARCH: amd64
        EXTENSION: ".exe"
      displayName: Build windows-amd64 client binary

    - publish: $(Build.ArtifactStagingDirectory)/aks-secure-tls-bootstrap-client.exe
      artifact: windows-amd64
      
- stage: publish
  dependsOn:
    - build_linux_amd64
    - build_linux_arm64
    - build_windows_amd64
  jobs:
  - job: publish
    displayName: Publish
    steps:
    - checkout: self

    - task: DownloadPipelineArtifact@2
      displayName: Download linux-amd64
      inputs:
        buildType: current
        artifactName: linux-amd64
        path: $(Build.ArtifactStagingDirectory)

    - task: DownloadPipelineArtifact@2
      displayName: Download linux-arm64
      inputs:
        buildType: current
        artifactName: linux-arm64
        path: $(Build.ArtifactStagingDirectory)

    - task: DownloadPipelineArtifact@2
      displayName: Download windows-amd64
      inputs:
        buildType: current
        artifactName: windows-amd64
        path: $(Build.ArtifactStagingDirectory)

    - bash: /bin/bash .pipelines/client/scripts/generate-github-token.sh
      env:
        PRIVATE_KEY: $(aks-node-sig-release-assistant-private-key)
        CLIENT_ID: $(aks-node-sig-release-assistant-client-id)
        INSTALLATION_ID: $(aks-node-sig-release-assistant-installation-id)
      displayName: Generate GitHub token

    - bash: /bin/bash .pipelines/client/scripts/github-publish.sh
      env:
        ARTIFACT_DIRECTORY: "$(Build.ArtifactStagingDirectory)"
        VERSION: "v${{ parameters.Version }}"
        GITHUB_TOKEN: $(GITHUB_TOKEN)
      displayName: Publish new GitHub release